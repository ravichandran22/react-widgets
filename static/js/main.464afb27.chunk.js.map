{"version":3,"sources":["components/Accordion.js","components/Search.js","components/Dropdown.js","components/Convert.js","components/Translate.js","components/Route.js","components/Link.js","components/Header.js","App.js","index.js"],"names":["Accordion","items","useState","activeIndex","setActiveIndex","renderedItems","map","item","index","active","Fragment","className","onClick","onTitleClick","title","content","Search","term","setTerm","results","setresults","useEffect","search","a","axios","get","params","action","list","origin","format","srsearch","data","query","length","timeoutId","setTimeout","clearTimeout","renderedResults","result","href","pageid","dangerouslySetInnerHTML","__html","snippet","value","onChange","e","target","Dropdown","label","options","selected","onSelectedChange","open","setOpen","ref","useRef","onBodyClick","event","current","contains","document","body","addEventListener","removeEventListener","renderedOptions","option","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","timerId","doTranslation","post","q","key","translations","translatedText","Translate","setLanguage","setText","Route","path","children","window","location","pathname","currentPath","setCurrentPath","onLocationChange","Link","metaKey","ctrlKey","preventDefault","history","pushState","navEvent","PopStateEvent","dispatchEvent","header","setSelected","Header","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.464afb27.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Accordion = ({items}) => {\r\n    const [activeIndex,setActiveIndex]=useState(null);\r\n\r\n  const renderedItems = items.map((item,index) =>{\r\n      const active = index === activeIndex ? 'active' : '';\r\n      const  onTitleClick = (index) => {\r\n        setActiveIndex(index);\r\n    };\r\n\r\n        return (\r\n            <React.Fragment key={item.title}>\r\n                <div className={`title ${active}`} onClick={() => onTitleClick(index)}>\r\n                    <i className=\"dropdown icon\"></i>\r\n                    {item.title}\r\n                </div>\r\n                <div className={`content ${active}`}>\r\n                    <p>{item.content}</p>\r\n                </div>\r\n            </React.Fragment> \r\n        );      \r\n  });\r\n\r\n    return  (\r\n        <div className=\"ui styled accordion\">\r\n            {renderedItems}\r\n        </div>\r\n    );\r\n};\r\nexport default Accordion;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst Search = () => {\r\n    const [term, setTerm] = useState('programming');\r\n    const [results,setresults]=useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n     const search = async () => {\r\n     const {data} =   await axios.get('https://en.wikipedia.org/w/api.php',{\r\n                params: {\r\n                    action:'query',\r\n                    list:'search',\r\n                    origin: '*',\r\n                    format:'json',\r\n                    srsearch: term,\r\n                },\r\n            });\r\n            setresults(data.query.search);\r\n        };\r\n        if (term && !results.length) {\r\n            search();\r\n            \r\n        } else {\r\n            const timeoutId =   setTimeout(() => {\r\n                if (term) {\r\n             \r\n                    search();   \r\n                }    \r\n            }, 1000);\r\n            return () => {\r\n                clearTimeout(timeoutId);\r\n            };\r\n        }\r\n        },[term,results.length]);\r\n      \r\n                   \r\n    const renderedResults = results.map((result) => {\r\n         return (\r\n                 <div key={result.pageid} className=\"item\">\r\n                     <div className=\"right floated content\">\r\n                         <a \r\n                         className=\"ui button\"\r\n                         href={`https://en.wikipedia.org?cruid=${result.pageid}`}\r\n                         >\r\n                             Go\r\n                             </a>\r\n                     </div>\r\n                            <div className=\"content\"> \r\n                            <div className=\"header\">\r\n                            {result.title}\r\n\r\n                            </div>\r\n                            <span dangerouslySetInnerHTML={{__html:result.snippet}}></span>\r\n\r\n                            </div>    \r\n                            </div>\r\n                        );\r\n                    });\r\n                     return (\r\n                            <div>\r\n                                <div className=\"ui form\">\r\n                                    <div className=\"field\">\r\n                                        <label>Enter Search Term</label>\r\n                                            <input\r\n                                            value={term}\r\n                                            onChange={(e) =>setTerm(e.target.value)}\r\n                                            className=\"input\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ui celled list\"> \r\n                                    {renderedResults}\r\n                                </div>\r\n                            </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst  Dropdown = ({label,options,selected,onSelectedChange}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const ref = useRef();\r\n   \r\n    useEffect(() => {\r\n        const onBodyClick = (event)=> {\r\n            if(ref.current && ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n            setOpen(false);\r\n        };\r\n\r\n      document.body.addEventListener('click',onBodyClick);\r\n      return () => {\r\n            document.body.removeEventListener('click',onBodyClick);\r\n      };\r\n    },[]);\r\n\r\n    const renderedOptions = options.map((option)=>{\r\n    \r\n        if (option.value === selected.value) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div key={options.value}\r\n             className=\"item\"\r\n             onClick={()=> onSelectedChange(option)}\r\n             >\r\n             \r\n                {option.label}\r\n            </div>\r\n        );\r\n    })\r\n    return (\r\n        <div ref={ref} className=\"ui form\">\r\n            <div className=\"field\">\r\n                    <label className=\"label\">\r\n                    {label}\r\n                    </label>\r\n                <div  onClick={()=> setOpen(!open)} className={`ui selection dropdown  ${ open ? 'visible active' : ''}`}>\r\n                    {/* <b>Choosen Language: &nbsp; </b>0 */}\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\">{selected.label}</div>\r\n                    <div className={`menu ${open ? 'visible transition': ''}`}>{renderedOptions}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nconst Convert = ({language,text}) => {\r\n    const [translated,setTranslated]=useState('');\r\n    const [debouncedText,setDebouncedText]=useState(text);\r\n    \r\n    useEffect(()=>{\r\n        const timerId = setTimeout(()=>{\r\n            setDebouncedText(text);\r\n        \r\n        },500); //tells wait for 0.5secs after run\r\n        return() => {\r\n            clearTimeout(timerId) // Ending The TimerFun\r\n        };\r\n    },[text]);\r\n    useEffect(()=>{\r\n        const doTranslation = async () => {\r\n\r\n        const {data} = await axios.post('https://translation.googleapis.com/language/translate/v2',\r\n            {},\r\n            {\r\n                params:{\r\n                    q: debouncedText,\r\n                    target: language.value,\r\n                    key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\r\n                },\r\n            }\r\n            );\r\n            setTranslated(data.data.translations[0].translatedText);\r\n        };\r\n        doTranslation();\r\n    },[language,debouncedText]);\r\n    return (\r\n        <div>\r\n        <h1 className=\"ui header\">{translated}</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Convert;","import React, { useState } from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport Convert from './Convert';\r\nconst options = [\r\n    {\r\n        label:'Tamil',\r\n        value:'ta'\r\n    },   \r\n    {\r\n        label:'Dutch',\r\n        value: 'nl'\r\n    },\r\n    {\r\n        label:'Afrikaans',\r\n        value:'af',\r\n    },\r\n    {\r\n        label:'Arabic',\r\n        value:'ar',\r\n    },\r\n    {\r\n        label:'Hindi',\r\n        value:'hi',\r\n    }\r\n\r\n];\r\n\r\nconst Translate = () => {\r\n    const [language,setLanguage] = useState([0]);\r\n    const [text,setText]=useState('');\r\n    return (\r\n        <div>\r\n            <div className=\"ui form\">\r\n                <div className=\"field\"> \r\n                    <label>Enter Text</label>\r\n                    <input value={text} onChange={(e)=>setText(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <Dropdown \r\n            label=\"Select a Language\"\r\n            selected={language}\r\n            onSelectedChange={setLanguage}\r\n            options={options}\r\n             />\r\n             <hr />\r\n             <h3 className=\"ui header\">Output</h3>\r\n                <Convert text={text} language={language} />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Translate;","import { useEffect,useState } from \"react\";\r\n\r\nconst Route =({path,children})=> {\r\n    const [currentPath,setCurrentPath] = useState(window.location.pathname);\r\n    useEffect(()=>{\r\n\r\nconst onLocationChange = ()=> {\r\n    setCurrentPath(window.location.pathname);\r\n};\r\n\r\n            window.addEventListener('popstate', onLocationChange);\r\n            return () => {\r\n                window.removeEventListener('popstate',onLocationChange);\r\n            };\r\n    },[] );\r\n    return currentPath === path \r\n    ? children :  null;\r\n        \r\n    \r\n};\r\n\r\n\r\nexport default Route;\r\n","import React from 'react';\r\n\r\nconst Link =({className,href, children}) => {\r\n   const onClick =(event)=>{\r\n       if (event.metaKey || event.ctrlKey) {\r\n           return;\r\n       }\r\n        event.preventDefault();\r\n        window.history.pushState({},'',href); //used when click the url it update\r\n\r\n        const navEvent = new PopStateEvent('popstate');\r\n        window.dispatchEvent(navEvent);\r\n   };\r\n   \r\n    return(\r\n        <a onClick={onClick} className={className} href={href}>\r\n            {children}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Link;","import React from 'react';\r\nimport Link from './Link';\r\nconst header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link href=\"/\" className=\"item\">\r\n                Accordion\r\n            </Link>\r\n            <Link href=\"/list\" className=\"item\">\r\n                Search\r\n            </Link>\r\n            <Link href=\"/dropdown\" className=\"item\">\r\n                Dropdown\r\n            </Link>\r\n            <Link href=\"/translate\" className=\"item\">\r\n                Translate\r\n            </Link>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default header;","import React, { useState } from 'react';\nimport Accordion from './components/Accordion';\nimport Search from './components/Search';\nimport  Dropdown from './components/Dropdown';\nimport Translate from './components/Translate';\nimport Route from './components/Route';\nimport Header from './components/Header';\n //Accordion\nconst items = [\n    {\n        title: 'What is React',\n        content: 'React is a front end javascript framework'\n    },\n    {\n        title: 'why use react',\n        content: 'React is a favourit JS libarary among engineers',\n\n    },\n    {\n        title: 'How do you use React?',\n        content: 'You use React by creating components'\n    },\n]\n\n// Choose Color (dropdown)\nconst options =[\n    {\n        label:'The Color Red',\n        value: 'red'\n    },\n    {\n        label:'The Color Green',\n        value: 'green'\n    },\n    {\n        label: 'A Shade of Blue',\n        value: 'blue'\n    },\n];\n\n    // Router Mappings\n    // const showAccordion = () => {\n    //     if(window.location.pathname ==='/') {\n    //         return <Accordion items={items} />;\n    //     }\n    // };\n\n\n    // const showList = () => {       //wikipedia list api \n    //     if(window.location.pathname==='/list') {\n    //         return <Search />;\n    //     }\n    // };\n\n    // const showDropdown = () => {\n    //     if(window.location.pathname==='/dropdown') {\n    //         return <Dropdown  />;\n    //     }\n    // }\n    // const ShowTranslate = () => {\n    //     if(window.location.pathname==='/translate') {\n    //         return <Translate />;\n    //     }\n    // }\n        // eslint-disable-next-line \n        export default () => {\n            const [selected, setSelected] = useState(options[0]);\n        return (\n            <div>\n                <Header/>\n                <Route path=\"/\">\n                    <Accordion  items={items}/>\n                </Route>\n                <Route path=\"/list\"> \n                    <Search />\n                </Route>\n                <Route path=\"/dropdown\"> \n                    <Dropdown \n                    label = \"Select a Color\"\n                    options={options}\n                    selected={selected}\n                    onSelectedChange={setSelected}\n                    />\n                </Route> \n                <Route path=\"/translate\"> \n                    <Translate />\n                </Route>   \n            </div>\n    );\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}